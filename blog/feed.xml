<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2019-09-16T05:21:54-04:00</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">jojo</title><subtitle></subtitle><author><name>hains jojo</name></author><entry><title type="html">Defeating steganography techniques in war games</title><link href="http://localhost:4000/blog/2019/08/15/stego-techniques.html" rel="alternate" type="text/html" title="Defeating steganography techniques in war games" /><published>2019-08-15T00:00:00-04:00</published><updated>2019-08-15T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019/08/15/stego-techniques</id><content type="html" xml:base="http://localhost:4000/blog/2019/08/15/stego-techniques.html">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#basics&quot;&gt;Tools&lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;#basics&quot;&gt;Basics&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jpg&quot;&gt;JPEG Tools&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#png&quot;&gt;PNG Tools&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#audio&quot;&gt;Audio Tools&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;introduction-&quot;&gt;Introduction &lt;a name=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Steganography is the technique used to hide data inside other data, for example, to hide a secret message inside an image, or a secret picture inside an audio file, a form of security through obscurity.. There are several ways to do that, and there are several softwares out there too. Almost all wargames I have been part of always had a steganography challenge in which we would be provided with a media file are expected to retrieve the hidden message or commonly called as a flag. Here I am trying to document few tools that I frequently use to solve these challenges.&lt;/p&gt;

&lt;h2 id=&quot;basics-&quot;&gt;Basics &lt;a name=&quot;basics&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;file&quot;&gt;File&lt;/h3&gt;

&lt;p&gt;This simple &lt;code class=&quot;highlighter-rouge&quot;&gt;file&lt;/code&gt; command is used to determine the file type, we shouldn’t always trust the file extentions.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@c0dbat:~/CTF/EASTER# file setup.png
setup.png: PE32 executable (GUI) Intel 80386, for MS Windows
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By looking at the file’s &lt;code class=&quot;highlighter-rouge&quot;&gt;.png&lt;/code&gt; extention we assume its an image file, but it is actually an executable P32 malware.&lt;/p&gt;

&lt;h3 id=&quot;binwalk&quot;&gt;Binwalk&lt;/h3&gt;

&lt;p&gt;This tool is used for file carving, it scans through the binary images to find embedded files using their signature usually known as magic numbers.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@c0dbat:~/CTF/EASTER/art# binwalk artist.zip 

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
0             0x0             Zip archive data, at least v2.0 to extract, compressed size: 11500, uncompressed size: 21131, name: nonameyet.mid
11543         0x2D17          Zip archive data, at least v2.0 to extract, compressed size: 79917, uncompressed size: 84355, name: sheet.pdf
91685         0x16625         End of Zip archive, footer length: 22

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;exiftool&quot;&gt;Exiftool&lt;/h3&gt;

&lt;p&gt;Tool to extract metadata from a file.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0dbat@gebian:~$ exiftool logo.png 
ExifTool Version Number         : 10.40
File Name                       : logo.png
Directory                       : .
File Size                       : 8.4 kB
File Modification Date/Time     : 2019:08:03 16:57:44-04:00
File Access Date/Time           : 2019:08:16 09:12:41-04:00
File Inode Change Date/Time     : 2019:08:03 16:57:44-04:00
File Permissions                : rw-r--r--
File Type                       : PNG
File Type Extension             : png
MIME Type                       : image/png
Image Width                     : 1000
Image Height                    : 151
Bit Depth                       : 8
Color Type                      : RGB with Alpha
Compression                     : Deflate/Inflate
Filter                          : Adaptive
Interlace                       : Noninterlaced
Background Color                : 255 255 255
Pixels Per Unit X               : 2835
Pixels Per Unit Y               : 2835
Pixel Units                     : meters
Modify Date                     : 2019:04:16 07:12:34
Comment                         : flag{3x1f_4ll_7h3_7hing5}
Image Size                      : 1000x151
Megapixels                      : 0.151
	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;xxd&quot;&gt;xxd&lt;/h3&gt;

&lt;p&gt;This tool is used to view the hex bytes of a file. This tool also allows us to convert hex to ASCII and vice-versa.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@c0dbat:~/CTF/EASTER# xxd setup.png 
00000000: 4d5a 5000 0200 0000 0400 0f00 ffff 0000  MZP.............
00000010: b800 0000 0000 0000 4000 1a00 0000 0000  ........@.......
00000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000030: 0000 0000 0000 0000 0000 0000 0001 0000  ................
00000040: ba10 000e 1fb4 09cd 21b8 014c cd21 9090  ........!..L.!..
00000050: 5468 6973 2070 726f 6772 616d 206d 7573  This program mus
00000060: 7420 6265 2072 756e 2075 6e64 6572 2057  t be run under W
00000070: 696e 3332 0d0a 2437 0000 0000 0000 0000  in32..$7........

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;strings&quot;&gt;strings&lt;/h3&gt;

&lt;p&gt;This tool prints all printable characters in a file. CTF architects usually hide flags or important clues which can be easily extracted using this simple command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@c0dbat:~/CTF/EASTER# strings setup.png 
This program must be run under Win32
CODE
`DATA
.idata
.tls
.rdata
P.reloc
P.rsrc
string
flag{5tr1ngs_s4ve5_th3_d4y}
Free
InitInstance
CleanupInstance
	ClassType
	ClassName
ClassNameIs
ClassParent
	ClassInfo
InstanceSize

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jpg-tools-&quot;&gt;JPG Tools &lt;a name=&quot;jpg&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;steghide&quot;&gt;Steghide&lt;/h3&gt;

&lt;p&gt;Steghide  is a steganography program that is able to hide data in various kinds of image and audio-files. The color- respectivly sample-frequencies  are  not  changed thus making the embedding resistant against first-order statistical tests.&lt;/p&gt;

&lt;p&gt;Steghide asks the user for a password and extracts the embedded file is extracted if the password matches. This password can be bruteforced or can be vulnerable to dictionary attacks.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stegcracker&lt;/code&gt; is used for dictionary attacks against files embedded with steghide.&lt;/p&gt;

&lt;h3 id=&quot;stegsolve&quot;&gt;Stegsolve&lt;/h3&gt;

&lt;p&gt;Stegsolve is a simple application that runs on java which is used to analyze images in different planes by taking off bits of the image. This tool plays with the different color levels and gives the output.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eugenekolo/sec-tools/tree/master/stego/stegsolve/stegsolve&quot;&gt;Download here.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;other-tools-for-jpg&quot;&gt;Other tools for JPG&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://old-releases.ubuntu.com/ubuntu/pool/universe/s/stegdetect&quot;&gt;Stegdetect&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linux.die.net/man/1/stegbreak&quot;&gt;Stegbreak&lt;/a&gt; Bruteforce cracker for JPG images.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://linux01.gwdg.de/~alatham/stego.html&quot;&gt;JPseek&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://linux01.gwdg.de/~alatham/stego.html&quot;&gt;Jsteg&lt;/a&gt; for week lsb stego.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jackfengji/f5-steganography&quot;&gt;f5&lt;/a&gt; F5 Steganographic Algorithm with detailed info on the process&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;png-tools-&quot;&gt;PNG Tools &lt;a name=&quot;png&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;zsteg&quot;&gt;Zsteg&lt;/h3&gt;

&lt;p&gt;This tool is used to detect steganography in PNG and BMP files.&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;zsteg -a file.png&lt;/code&gt; to run all checks&lt;/p&gt;

&lt;p&gt;It detects:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* LSB steganography in PNG &amp;amp; BMP
* zlib-compressed data
* OpenStego
* Camouflage 1.2.1
* LSB with The Eratosthenes set
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zed-0xff/zsteg&quot;&gt;Download here.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;pngcheck&quot;&gt;Pngcheck&lt;/h3&gt;

&lt;p&gt;This tool checks PNG images files for corruption, type, display size and compression info.&lt;/p&gt;

&lt;p&gt;Tool can be installed using &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install pngcheck&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;stegano&quot;&gt;Stegano&lt;/h3&gt;

&lt;p&gt;Hides data with various (LSB-based) methods.&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;stegano-lsb reveal -i file.png -e UTF-8 -o output.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cedricbonhomme/Stegano&quot;&gt;Download here.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;other-tools-for-png&quot;&gt;Other tools for PNG&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/livz/cloacked-pixel&quot;&gt;cloackedpixel&lt;/a&gt; LSB steganography and detection&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/syvaidya/openstego&quot;&gt;Openstego&lt;/a&gt; Watermarking files (e.g. images) with an invisible signature. It can be used to detect unauthorized file copying.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;audio-tools-&quot;&gt;Audio Tools &lt;a name=&quot;audio&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;ffmpeg&quot;&gt;ffmpeg&lt;/h3&gt;

&lt;p&gt;ffmpeg can be used to check integrity of audio files and let it report infos and errors&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;ffmpeg -v info -i stego.mp3 -f null -&lt;/code&gt; to recode the file and throw away the result&lt;/p&gt;

&lt;h3 id=&quot;mp3stego&quot;&gt;mp3stego&lt;/h3&gt;

&lt;p&gt;MP3Stego will hide information in MP3 files during the compression process. The data is first compressed, encrypted and then hidden in the MP3 bit stream.&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;mp3stego-decode -X -P password /path/to/stego.mp3 /path/to/out.pcm /path/to/out.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.petitcolas.net/steganography/mp3stego/&quot;&gt;Download here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;audiostego&quot;&gt;AudioStego&lt;/h3&gt;

&lt;p&gt;Audio file steganography. Hides text or files inside audio files and retrieve them automatically. It actually supports only .mp3 and .wav files as inputs, but you can hide whatever kind of file or text on them.&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;hideme [file_with_hidden_data] -f&lt;/code&gt; to retrieve data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/danielcardeenas/AudioStego&quot;&gt;Download here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;sonic-visualiser&quot;&gt;Sonic Visualiser&lt;/h3&gt;

&lt;p&gt;Sonic Visualiser is an application for viewing and analysing the contents of music audio files.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sonicvisualizer.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sonicvisualiser.org/&quot;&gt;Download here&lt;/a&gt;&lt;/p&gt;</content><author><name>hains jojo</name></author><category term="CTF" /><category term="stego" /><summary type="html">Table of contents Introduction Tools Basics JPEG Tools PNG Tools Audio Tools</summary></entry><entry><title type="html">xor decrypt</title><link href="http://localhost:4000/blog/2017/11/06/xor-decrypt.html" rel="alternate" type="text/html" title="xor decrypt" /><published>2017-11-06T00:00:00-05:00</published><updated>2017-11-06T00:00:00-05:00</updated><id>http://localhost:4000/blog/2017/11/06/xor-decrypt</id><content type="html" xml:base="http://localhost:4000/blog/2017/11/06/xor-decrypt.html">&lt;h1 id=&quot;ransompics-from-opcde&quot;&gt;RansomPics from OPCDE&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Points- 200&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We have been hit by a ransomware, all our pictures have been encrypted and we need this one right now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Write up&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For this challenge we were given a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;flag_16.xng&lt;/code&gt; and also a hint was given that it was a png file.&lt;/p&gt;

&lt;p&gt;As most ransomwares use simple encrypting systems lets assume that it has been xorred all over.&lt;/p&gt;

&lt;p&gt;As the file has been named &lt;code class=&quot;highlighter-rouge&quot;&gt;flag_16.xng&lt;/code&gt; lets assume that a 16 byte key is used to xor every byte of the file, and we need this key to get the original png back.&lt;/p&gt;

&lt;p&gt;Lets look at the first 16 bytes on the given file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/3qL5JJY.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now lets download random png files from the web and have a look at its first 16 bytes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/shC1cqH.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So from our observation we can see that most pngs have the same first 16 bytes &lt;code class=&quot;highlighter-rouge&quot;&gt;89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lets find the key using this python program&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;binascii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;xor_strings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binascii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unhexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binascii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unhexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binascii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xor_strings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@c0dbat:~/Desktop# python xorstring.py E2124C6DD3A7A4E5CAF2588C8ECEBABF 89504E470D0A1A0A0000000D49484452
6b42022adeadbeefcaf25881c786feed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So our xor key is &lt;code class=&quot;highlighter-rouge&quot;&gt;6b42022adeadbeefcaf25881c786feed&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lets decrypt the encrypted file with this program.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x6b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x2a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xbe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x58&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x81&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xfe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;root@c0dbat:~/Desktop# python xordecrypt.py flag_16.xng &amp;gt;&amp;gt; final.png&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Voila we got the flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;www.i.imgur.com/DxkHvtZ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>hains jojo</name></author><category term="CTF" /><category term="ransomware" /><category term="xor" /><summary type="html">RansomPics from OPCDE Points- 200</summary></entry></feed>